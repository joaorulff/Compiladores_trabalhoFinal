package compilador;

import java_cup.runtime.*;
import java.io.FileReader;


parser code
{:
    // Funções chamadas em erros ///////////////////////////////////////////////////////////////////////////
    public void syntax_error(Symbol s){ 
        System.out.println("\nOcorreu um erro na linha " + (s.right) +", coluna "+s.left+ ". Identificador "
        +s.value + " não reconhecido." );
    }

    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{
        System.out.println("\nOcorreu um erro na linha " + (s.right)+ ", coluna "+s.left+". Identificador " +
        s.value + " não reconhecido.");
    }
    
:}

terminal SUM, MINUS, MULTIPLICATION, DIVISION;
terminal ID, INTEGER;
terminal OPEN, CLOSE, EQUAL, ENDSTMT, COMMA, GREATERTHAN, LESSTHAN, EQUALITY;
terminal DEF, IF, ELSE, THEN, TRUE, FALSE;

non terminal P, I, D, ARGS, SEQ, E, E2, E3, A, T, T2, F, OPREL, OPARIT, ARGS2, SEQ2, ADDOP, MULTOP;


start with P;

P ::= 	ID EQUAL INTEGER ENDSTMT P
	{:
		System.out.println("P ::= ID EQUAL INTEGER ENDSTMT P");
	:}
	
|		I
	{:
		System.out.println("P ::= I");
	:};
	
I ::=	D ENDSTMT I
	{:
		System.out.println("I ::= D ENDSTMT I");
	:}
| 		D
	{:
		System.out.println("I ::= D");
	:};

D ::= DEF ID OPEN ARGS CLOSE EQUAL E ENDSTMT
	{:
		System.out.println("D ::= DEF ID OPEN ARGS CLOSE EQUAL E ENDSTMT");
	:};
	
ARGS ::= ID ARGS2
	{:
		System.out.println("ARGS ::= ID ARGS2");
	:};

ARGS2 ::= COMMA ARGS
	{:
		System.out.println("ARGS2 ::= COMMA ARGS");
	:}
|
	{:
		System.out.println("ARGS2 ::= &");
	:};	

SEQ2 ::= COMMA E SEQ2
	{:
		System.out.println("SEQ2 ::= COMMA E SEQ2");
	:}
|
	{:
		System.out.println("SEQ2 ::= &");
	:};
	
SEQ ::= E SEQ2
	{:
		System.out.println("SEQ ::= E");
	:};
	
E ::= INTEGER
	{:
		System.out.println("E ::= INTEGER");
	:}
|	ID E2
	{:
		System.out.println("E ::= ID E2");
	:}
| IF E OPREL E THEN E ELSE E
	{:
		System.out.println("E ::= IF E OPREL E THEN E ELSE E");
	:}
| T E3	
	{:
		System.out.println("E ::= T E3");
	:};
	
E2 ::= OPEN E SEQ2 CLOSE
	{:
		System.out.println("E2 ::= OPEN E SEQ2 CLOSE");
	:}
| 
	{:
		System.out.println("E ::= &");
	:};
	
E3 ::= ADDOP T E3
	{:
		System.out.println("E3 ::= ADDOP T E3");
	:}
|
	{:
		System.out.println("E3 ::= &");
	:};

ADDOP ::= SUM
	{:
		System.out.println("ADDOP ::= SUM");
	:}
| MINUS
	{:
		System.out.println("ADDOP ::= MINUS");
	:};
	
T ::= F T2
	{:
		System.out.println("T ::= F T2");
	:};

T2 ::= MULTOP F T2
	{:
		System.out.println("T2 ::= MULTOP F T2");
	:}
| 
	{:
		System.out.println("T ::= &");
	:};
	
MULTOP ::= MULTIPLICATION
	{:
		System.out.println("MULTOP ::= MULTIPLICATION");
	:}
|	DIVISION
	{:
		System.out.println("MULTOP ::= DIVISION");
	:};
F ::= OPEN E CLOSE
	{:
		System.out.println("F ::= OPEN E CLOSE");
	:};

OPREL ::= EQUALITY
	{:
		System.out.println("OPREL ::= EQUALITY");
	:}
| GREATERTHAN
	{:
		System.out.println("OPREL ::= GREATERTHAN");
	:}
| LESSTHAN
	{:
		System.out.println("OPREL ::= LESSTHAN");
	:};